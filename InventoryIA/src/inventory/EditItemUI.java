/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory;

import java.util.ArrayList;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author lukef
 */
public class EditItemUI extends javax.swing.JDialog {
    //Create an instnace variable to hold the items data and add appropriate info in, references Item.java
    private ArrayList<Item> items = new ArrayList<Item>();
    private ArrayList<Item> searchList = new ArrayList<Item>();
    //new values
    private String newItemName;
    private int newQuantity;
    private String newDescription;
    
    //old value to keep recorded
    private String oldItemName;
    
    //boolean to tell if saved or not
    private boolean pressedEditSave = false;
    
    /**
     * Creates new form EditItemUI
     */
    public EditItemUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    //method to get items data from main form, public because accessible by main form
    public void setItems(ArrayList<Item> i) {
        items = i;
    }
    //itemIndex to determine where it lies in the array and listbox
    private int itemIndex;
    //gets the index
    public int getIndex() {
        return itemIndex;
    }
    //sets the variable as the index
    public void setIndex(int i) {
        this.itemIndex = i;
    }
    
    //method to put in data
    public void populateFields() {
        //gets the values from the arraylist using the itemIndex
        Item i = items.get(itemIndex);
        
        
        //keeps the old item name
        oldItemName = textFieldItemName.getText();
        
        //sets the old information into the textfields and areas
        textFieldItemName.setText(i.getItemName());
        textFieldQuantity.setText(String.valueOf(i.getQuantity()));
        textAreaDescription.setText(i.getDescription());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        textFieldQuantity = new javax.swing.JTextField();
        textFieldItemName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaDescription = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        buttonSaveChanges = new javax.swing.JButton();
        buttonDiscardChanges = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Troop Inventory");
        setLocation(new java.awt.Point(800, 300));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel3.setText("Description:");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        textAreaDescription.setColumns(20);
        textAreaDescription.setRows(5);
        textAreaDescription.setWrapStyleWord(true);
        jScrollPane1.setViewportView(textAreaDescription);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Edit Item");

        buttonSaveChanges.setText("Save Changes");
        buttonSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveChangesActionPerformed(evt);
            }
        });

        buttonDiscardChanges.setText("Discard Changes");
        buttonDiscardChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDiscardChangesActionPerformed(evt);
            }
        });

        jLabel1.setText("Item Name:");

        jLabel2.setText("Quantity:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonSaveChanges, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonDiscardChanges))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldQuantity)
                            .addComponent(textFieldItemName)))
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textFieldItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSaveChanges)
                    .addComponent(buttonDiscardChanges))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveChangesActionPerformed
        // TODO add your handling code here:
        
        try{
        if(textFieldItemName.getText().equals("") || textFieldQuantity.getText().equals("")) {
            showMessageDialog(null, "Please enter fully fill out the information before saving!");
        } else{
        //gets values from the input
        newItemName = textFieldItemName.getText();
        newQuantity = Integer.parseInt(textFieldQuantity.getText());
        newDescription = textAreaDescription.getText();
        
        //Tells form if the edit was saved or not
        pressedEditSave = true;
        showMessageDialog(null, "Item successfully edited.");
        
        this.setVisible(false);
        }
        }catch(NumberFormatException ex){
            showMessageDialog(null, "Please put in a valid number of units!");
        }
        
    }//GEN-LAST:event_buttonSaveChangesActionPerformed

    private void buttonDiscardChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDiscardChangesActionPerformed
        // TODO add your handling code here:\
        this.setVisible(false);
    }//GEN-LAST:event_buttonDiscardChangesActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        populateFields();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditItemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditItemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditItemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditItemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditItemUI dialog = new EditItemUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDiscardChanges;
    private javax.swing.JButton buttonSaveChanges;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textAreaDescription;
    private javax.swing.JTextField textFieldItemName;
    private javax.swing.JTextField textFieldQuantity;
    // End of variables declaration//GEN-END:variables
    //Methods to be accessed by the main form for data transfer
    public boolean isPressedEditSave() {
        return pressedEditSave;
    }
    public String getNewItemName() {
        return newItemName;
    }
    public int getNewQuantity() {
        return newQuantity;
    }
    public String getNewDescription() {
        return newDescription;
    }
    public String getOldItemName() {
        return oldItemName;
    }
}

